// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication4.Models;

namespace WebApplication4.Migrations
{
    [DbContext(typeof(MailContext))]
    [Migration("20220830092347_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebApplication4.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DateAndTime")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ReceiverEmail")
                        .IsRequired()
                        .HasMaxLength(900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("SenderEmail")
                        .IsRequired()
                        .HasMaxLength(900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<int>("ThreadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverEmail");

                    b.HasIndex("SenderEmail");

                    b.HasIndex("ThreadId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("WebApplication4.Models.Thread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("ReceiverEmail")
                        .IsRequired()
                        .HasMaxLength(900)
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Subject")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("ReceiverEmail");

                    b.ToTable("Thread");
                });

            modelBuilder.Entity("WebApplication4.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "UniEmail")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication4.Models.Message", b =>
                {
                    b.HasOne("WebApplication4.Models.User", "ReceiverEmailNavigation")
                        .WithMany("MessageReceiverEmailNavigations")
                        .HasForeignKey("ReceiverEmail")
                        .HasConstraintName("FK_Message_ToTable_2")
                        .HasPrincipalKey("Email")
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.User", "SenderEmailNavigation")
                        .WithMany("MessageSenderEmailNavigations")
                        .HasForeignKey("SenderEmail")
                        .HasConstraintName("FK_Message_ToTable_1")
                        .HasPrincipalKey("Email")
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Thread", "Thread")
                        .WithMany("Messages")
                        .HasForeignKey("ThreadId")
                        .HasConstraintName("FK_Message_ToTable")
                        .IsRequired();

                    b.Navigation("ReceiverEmailNavigation");

                    b.Navigation("SenderEmailNavigation");

                    b.Navigation("Thread");
                });

            modelBuilder.Entity("WebApplication4.Models.Thread", b =>
                {
                    b.HasOne("WebApplication4.Models.User", "EmailNavigation")
                        .WithMany("ThreadEmailNavigations")
                        .HasForeignKey("Email")
                        .HasConstraintName("FK_Thread_ToTable")
                        .HasPrincipalKey("Email")
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.User", "ReceiverEmailNavigation")
                        .WithMany("ThreadReceiverEmailNavigations")
                        .HasForeignKey("ReceiverEmail")
                        .HasConstraintName("FK_Thread_ToTable_1")
                        .HasPrincipalKey("Email")
                        .IsRequired();

                    b.Navigation("EmailNavigation");

                    b.Navigation("ReceiverEmailNavigation");
                });

            modelBuilder.Entity("WebApplication4.Models.Thread", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WebApplication4.Models.User", b =>
                {
                    b.Navigation("MessageReceiverEmailNavigations");

                    b.Navigation("MessageSenderEmailNavigations");

                    b.Navigation("ThreadEmailNavigations");

                    b.Navigation("ThreadReceiverEmailNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
